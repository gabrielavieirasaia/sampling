# -*- coding: utf-8 -*-
"""Sampling.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1D8hndTyvUC6JQZzcD9dQYpDP0EzBM51W
"""

!git clone https://github.com/thegiftofgabi/sampling.git

import pandas as pd
import random
import numpy as np

dataset = pd.read_csv('/content/census.csv')

"""# Random Sampling"""

dataset.head()

dataset.shape

df_amostra_simples = dataset.sample( n = 10)
df_amostra_simples.shape

df_amostra_simples.head()

def amostragem_simples (dataset, amostras):
  return dataset.sample (n = amostras)

df_amostra_aleatoria_simples = amostragem_simples (dataset, 25)
df_amostra_aleatoria_simples.head()

"""# Systematic Sampling"""

dataset.shape

len(dataset) // 100

random.seed(1)
random.randint(0, 325)

np.arange(68, len(dataset), step = 325)

def amostragem_sistematica(dataset, amostras):
  intervalo = len(dataset) // amostras
  random.seed(1)
  inicio = random.randint(0, intervalo)
  indices = np.arange(inicio, len(dataset), step = intervalo)
  amostra_sistematica = dataset.iloc[indices]
  return amostra_sistematica

"""# Sampling by groups"""

len(dataset) // 10

grupos = []
id_grupo = 0
contagem = 0
for _ in dataset.iterrows():
  grupos.append(id_grupo)
  contagem += 1
  if contagem > 3256:
    contagem = 0
    id_grupo += 1

print(grupos)

np.unique(grupos, return_counts=True)